{"version":3,"sources":["assets/noPosterSmall.png","components/Header.js","components/Section.js","components/Loader.js","components/Message.js","components/Poster.js","routes/Home/HomePresenter.js","api.js","routes/Home/index.js","routes/Home/HomeContainer.js","routes/Search/SearchPresenter.js","routes/Search/index.js","routes/Search/SearchContainer.js","routes/TV/TVPresenter.js","routes/TV/index.js","routes/TV/TVContainer.js","routes/Detail/DetailPresenter.js","routes/Detail/index.js","routes/Detail/DetailContainer.js","components/Router.js","components/GlobalStyles.js","components/App.js","index.js"],"names":["module","exports","List","styled","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","Loader","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","image","rating","year","isMovie","require","role","aria-label","HomePresenter","nowPlaying","upcoming","popular","loading","error","console","log","Helmet","map","movie","key","original_title","poster_path","vote_average","release_date","substring","api","axios","create","baseURL","params","api_key","language","movieApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","useState","setNowPlaying","setUpcoming","setPopular","setLoading","setError","getApi","a","data","results","useEffect","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","onSubmit","onChange","type","name","placeholder","show","original_name","first_air_date","SearchContainer","setMovieResults","setTvResults","setSearchTerm","searchByTerm","e","preventDefault","value","target","TVPresenter","topRated","airingToday","TVContainer","setTopRated","setAiringToday","Backdrop","bgImage","Content","Cover","Data","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","length","overview","DetailContainer","push","history","setResult","includes","useParams","parsedId","parseInt","isNaN","Router","path","exact","component","Home","TV","Search","Detail","GlobalStyles","createGlobalStyle","reset","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b91406e1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst List = styled.ul`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(3, 100px);\n  grid-auto-rows: 50px;\n  z-index: 10;\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 1);\n`;\n\nconst Item = styled.li`\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.2s linear;\n`;\n\nconst SLink = styled(Link)`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Header = ({ location: { pathname } }) => {\n  return (\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TVs</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  );\n};\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div``;\n\nconst Title = styled.span`\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin: 20px 0;\n  display: grid;\n  gap: 20px;\n  justify-content: center;\n  grid-template-columns: repeat(auto-fill, 125px);\n`;\n\nconst Section = ({ title, children }) => {\n  return (\n    <Container>\n      <Title>{title}</Title>\n      <Grid>{children}</Grid>\n    </Container>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  font-size: 25px;\n`;\n\nconst Loader = () => {\n  return <Container>Loading...</Container>;\n};\n\nexport default Loader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  height: 190px;\n  border-radius: 4px;\n  background-image: url(${(props) => props.bgUrl});\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center center;\n  transition: opacity 0.2s linear;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  opacity: 0;\n  transition: opacity 0.2s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst Year = styled.span`\n  opacity: 0.6;\n`;\n\nconst Poster = ({ id, title, image, rating, year, isMovie = false }) => {\n  return (\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n      <Container>\n        <ImageContainer>\n          <Image\n            bgUrl={\n              image\n                ? `https://image.tmdb.org/t/p/original${image}`\n                : require(\"../assets/noPosterSmall.png\")\n            }\n          />\n          <Rating>\n            <span role=\"img\" aria-label=\"rating\">\n              ⭐️\n            </span>\n            {rating} / 10\n          </Rating>\n        </ImageContainer>\n        <Title>{title}</Title>\n        <Year>{year}</Year>\n      </Container>\n    </Link>\n  );\n};\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  image: PropTypes.string,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../components/Section\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport Poster from \"../../components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 0 10px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, loading, error }) => {\n  console.log(nowPlaying, upcoming, popular, loading, error);\n  return (\n    <>\n      <Helmet>\n        <title>Movies | Popcorn</title>\n      </Helmet>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Container>\n          {nowPlaying && (\n            <Section title=\"Now Playing\">\n              {nowPlaying.map((movie) => (\n                <Poster\n                  id={movie.id}\n                  key={movie.id}\n                  title={movie.original_title}\n                  image={movie.poster_path}\n                  rating={movie.vote_average}\n                  year={\n                    movie.release_date && movie.release_date.substring(0, 4)\n                  }\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {upcoming && (\n            <Section title=\"Upcoming\">\n              {upcoming.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  title={movie.original_title}\n                  image={movie.poster_path}\n                  rating={movie.vote_average}\n                  year={\n                    movie.release_date && movie.release_date.substring(0, 4)\n                  }\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {popular && (\n            <Section title=\"Popular\">\n              {popular.map((movie) => (\n                <Poster\n                  id={movie.id}\n                  key={movie.id}\n                  title={movie.original_title}\n                  image={movie.poster_path}\n                  rating={movie.vote_average}\n                  year={\n                    movie.release_date && movie.release_date.substring(0, 4)\n                  }\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message text={error} color=\"#e74c3c\" />}\n        </Container>\n      )}\n    </>\n  );\n};\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upComing: PropTypes.array,\n  popular: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"6f4e46529695845bf36a1ce1369523a5\",\n    language: \"en-US\",\n  },\n});\n\nexport const movieApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React, { useState, useEffect } from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { movieApi } from \"../../api\";\n\nconst HomeContainer = () => {\n  const [nowPlaying, setNowPlaying] = useState(null);\n  const [upcoming, setUpcoming] = useState(null);\n  const [popular, setPopular] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const getApi = async () => {\n    const {\n      data: { results: nowPlaying },\n    } = await movieApi.nowPlaying();\n    const {\n      data: { results: upcoming },\n    } = await movieApi.upcoming();\n    const {\n      data: { results: popular },\n    } = await movieApi.popular();\n    setNowPlaying(nowPlaying);\n    setUpcoming(upcoming);\n    setPopular(popular);\n    setLoading(false);\n  };\n  useEffect(() => {\n    try {\n      getApi();\n    } catch (error) {\n      setError(\"Can't find movie information.\");\n      setLoading(false);\n    } finally {\n    }\n  }, []);\n  return (\n    <HomePresenter\n      nowPlaying={nowPlaying}\n      upcoming={upcoming}\n      popular={popular}\n      loading={loading}\n      error={error}\n    />\n  );\n};\n\nexport default HomeContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../components/Loader\";\nimport Section from \"../../components/Section\";\nimport Message from \"../../components/Message\";\nimport Poster from \"../../components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 0 10px;\n`;\n\nconst Form = styled.form``;\n\nconst Input = styled.input`\n  all: unset;\n  width: 100%;\n  font-size: 25px;\n  margin-bottom: 30px;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  loading,\n  error,\n  onSubmit,\n  onChange,\n}) => {\n  return (\n    <Container>\n      <Helmet>\n        <title>Search | Popcorn</title>\n      </Helmet>\n      <Form onSubmit={onSubmit}>\n        <Input\n          type=\"text\"\n          name=\"term\"\n          placeholder=\"Search Movies or TVs...\"\n          onChange={onChange}\n        />\n      </Form>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          {movieResults && (\n            <Section title=\"Movie Results\">\n              {movieResults.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  title={movie.original_title}\n                  image={movie.poster_path}\n                  rating={movie.vote_average}\n                  year={\n                    movie.release_date && movie.release_date.substring(0, 4)\n                  }\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {tvResults && (\n            <Section title=\"Show Results\">\n              {tvResults.map((show) => (\n                <Poster\n                  id={show.id}\n                  key={show.id}\n                  title={show.original_name}\n                  image={show.poster_path}\n                  rating={show.vote_average}\n                  year={\n                    show.first_air_date && show.first_air_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message text={error} color=\"#e74c3c\" />}\n        </>\n      )}\n    </Container>\n  );\n};\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React, { useState } from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { movieApi, tvApi } from \"../../api\";\n\nconst SearchContainer = () => {\n  const [movieResults, setMovieResults] = useState(null);\n  const [tvResults, setTvResults] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"code\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (searchTerm !== \"\") {\n      searchByTerm(searchTerm);\n    }\n  };\n  const searchByTerm = async (term) => {\n    setLoading(true);\n    try {\n      const {\n        data: { results: movieResults },\n      } = await movieApi.search(term);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(term);\n      setMovieResults(movieResults);\n      setTvResults(tvResults);\n      setLoading(false);\n      console.log(movieResults, tvResults);\n    } catch (error) {\n      setError(\"Can't find results.\");\n      setLoading(false);\n    } finally {\n    }\n  };\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    console.log(value);\n    setSearchTerm(value);\n  };\n  return (\n    <SearchPresenter\n      movieResults={movieResults}\n      tvResults={tvResults}\n      searchTerm={searchTerm}\n      loading={loading}\n      error={error}\n      onSubmit={onSubmit}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default SearchContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../components/Section\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport Poster from \"../../components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 0 10px;\n`;\n\nconst TVPresenter = ({ topRated, airingToday, popular, loading, error }) => {\n  console.log(topRated, airingToday, popular, loading, error);\n  return (\n    <>\n      <Helmet>\n        <title>TVs | Popcorn</title>\n      </Helmet>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Container>\n          {topRated && (\n            <Section title=\"Top Rated\">\n              {topRated.map((show) => (\n                <Poster\n                  id={show.id}\n                  key={show.id}\n                  title={show.original_name}\n                  image={show.poster_path}\n                  rating={show.vote_average}\n                  year={\n                    show.first_air_date && show.first_air_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n          {airingToday && (\n            <Section title=\"Airing Today\">\n              {airingToday.map((show) => (\n                <Poster\n                  id={show.id}\n                  key={show.id}\n                  title={show.original_name}\n                  image={show.poster_path}\n                  rating={show.vote_average}\n                  year={\n                    show.first_air_date && show.first_air_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n          {popular && (\n            <Section title=\"Popular\">\n              {popular.map((show) => (\n                <Poster\n                  id={show.id}\n                  key={show.id}\n                  title={show.original_name}\n                  image={show.poster_path}\n                  rating={show.vote_average}\n                  year={\n                    show.first_air_date && show.first_air_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message text={error} color=\"#e74c3c\" />}\n        </Container>\n      )}\n    </>\n  );\n};\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  airingToday: PropTypes.array,\n  popular: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React, { useState, useEffect } from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"../../api\";\n\nconst TVContainer = () => {\n  const [topRated, setTopRated] = useState(null);\n  const [popular, setPopular] = useState(null);\n  const [airingToday, setAiringToday] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const getApi = async () => {\n    const {\n      data: { results: topRated },\n    } = await tvApi.topRated();\n    const {\n      data: { results: popular },\n    } = await tvApi.popular();\n    const {\n      data: { results: airingToday },\n    } = await tvApi.airingToday();\n    setTopRated(topRated);\n    setPopular(popular);\n    setAiringToday(airingToday);\n    setLoading(false);\n  };\n  useEffect(() => {\n    try {\n      getApi();\n    } catch (error) {\n      setError(\"Can't find TV information.\");\n      setLoading(false);\n    } finally {\n    }\n  }, []);\n  return (\n    <TVPresenter\n      topRated={topRated}\n      airingToday={airingToday}\n      popular={popular}\n      loading={loading}\n      error={error}\n    />\n  );\n};\n\nexport default TVContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../components/Loader\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  position: relative;\n  height: calc(100vh - 50px);\n  padding: 30px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-size: contain;\n  background-repeat: no-repeat;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: -1;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  height: 100%;\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-size: contain;\n  background-repeat: no-repeat;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  padding: 0 10px;\n`;\n\nconst Title = styled.span`\n  font-size: 20px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 10px 0;\n  font-size: 12px;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.4;\n  width: 80%;\n  height: 140px;\n  overflow: scroll;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) => {\n  console.log(result, loading, error);\n  return (\n    <>\n      <Helmet>\n        <title>\n          {loading\n            ? \"Loading\"\n            : result.original_title\n            ? result.original_title\n            : result.original_name}{\" \"}\n          | Popcorn\n        </title>\n      </Helmet>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Container>\n          <Backdrop\n            bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n          />\n          <Content>\n            <Cover\n              bgImage={\n                result.poster_path\n                  ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                  : require(\"../../assets/noPosterSmall.png\")\n              }\n            />\n            <Data>\n              <Title>\n                {result.original_title\n                  ? result.original_title\n                  : result.original_name}\n              </Title>\n              <ItemContainer>\n                <Item>\n                  {result.release_date\n                    ? result.release_date.substring(0, 4)\n                    : result.first_air_date.substring(0, 4)}\n                </Item>\n                <Divider>•</Divider>\n                <Item>\n                  {result.runtime ? result.runtime : result.episode_run_time}{\" \"}\n                  min\n                </Item>\n                <Divider>•</Divider>\n                <Item>\n                  {result.genres &&\n                    result.genres.map((genre, index) =>\n                      index === result.genres.length - 1\n                        ? genre.name\n                        : `${genre.name} / `\n                    )}\n                </Item>\n              </ItemContainer>\n              <Overview>{result.overview}</Overview>\n            </Data>\n          </Content>\n        </Container>\n      )}\n    </>\n  );\n};\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React, { useState, useEffect } from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { useParams } from \"react-router-dom\";\nimport { movieApi, tvApi } from \"../../api\";\n\nconst DetailContainer = ({ location: { pathname }, history: { push } }) => {\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isMovie] = useState(() => pathname.includes(\"/movie/\"));\n  const { id } = useParams();\n  const getApi = async () => {\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    if (isMovie) {\n      ({ data: result } = await movieApi.movieDetail(id));\n    } else {\n      ({ data: result } = await tvApi.showDetail(id));\n    }\n    setResult(result);\n    setLoading(false);\n  };\n  useEffect(() => {\n    try {\n      getApi();\n    } catch (error) {\n      setError(\"Can't find anything.\");\n      setLoading(false);\n    } finally {\n    }\n  }, []);\n  return <DetailPresenter result={result} loading={loading} error={error} />;\n};\n\nexport default DetailContainer;\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Home from \"../routes/Home\";\nimport Search from \"../routes/Search\";\nimport TV from \"../routes/TV\";\nimport Detail from \"../routes/Detail\";\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <Header />\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/tv\" component={TV} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/show/:id\" component={Detail} />\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst GlobalStyles = createGlobalStyle`\n  ${reset}\n  * {\n    box-sizing: border-box\n  }\n  body {\n    font-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    background-color: rgba(20,20,20,0.9);\n    color: rgba(250,250,250,0.9);\n    padding-top: 60px;\n  }\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n`;\n\nexport default GlobalStyles;\n","import React from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyles />\n      <Router />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}